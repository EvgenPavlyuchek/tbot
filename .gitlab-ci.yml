variables:
  TARGETOS: "linux"
  TARGETARCH: "amd64"
  REGISTRY: $CI_REGISTRY
  REPOSITORY: $CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  LATEST_TAG: $CI_COMMIT_TAG
  VERSION: $LATEST_TAG-$CI_COMMIT_SHORT_SHA

stages:
  - test
  - build
  - image
  - push

test:
  stage: test
  image: golang:1.20
  script:
    - echo "TEST EXECUTION STARTED"
    - make test TARGETOS=$TARGETOS TARGETARCH=$TARGETARCH
  # allow_failure: true

build:
  stage: build
  image: golang:1.20
  script:
    - |
      if [[ -n "$CI_COMMIT_TAG" ]]; then
        VERSION=$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
      else
        LATEST_TAG="$(git ls-remote --tags origin | awk -F'/' '{print $3}' | grep -v '{}' | sort -V | tail -1)"
        VERSION=$LATEST_TAG-$CI_COMMIT_SHORT_SHA
      fi
    - echo "BUILD EXECUTION STARTED"
    - make build TARGETOS=$TARGETOS TARGETARCH=$TARGETARCH VERSION=$VERSION
  artifacts:
    paths:
      - ./tbot
    # expire_in: 1 week

images:
  stage: image
  image: docker:latest
  script:
    # - cp build/tbot .
    - apk update && apk add git
    - |
      if [[ -n "$CI_COMMIT_TAG" ]]; then
        VERSION=$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA
      else
        LATEST_TAG="$(git ls-remote --tags origin | awk -F'/' '{print $3}' | grep -v '{}' | sort -V | tail -1)"
        VERSION=$LATEST_TAG-$CI_COMMIT_SHORT_SHA
      fi
    - echo $VERSION
    - echo "VERS=$VERSION" >> images_vars
    - REPOSITORY=$(echo $REPOSITORY | tr '[:upper:]' '[:lower:]')
    - echo $REPOSITORY
    - echo "REPO=$REPOSITORY" >> images_vars
    - apk update && apk add --no-cache make
    - echo "BUILD EXECUTION STARTED"
    # - docker build -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHORT_SHA .
    - make image REGISTRY=$REGISTRY REPOSITORY=$REPOSITORY VERSION=$VERSION TARGETOS=$TARGETOS TARGETARCH=$TARGETARCH
  # dependencies:
  #   - build
  artifacts:
    paths:
      - images_vars

push:
  stage: push
  image: docker:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - source images_vars
    - echo $VERS
    - echo $REPO
    - apk update && apk add --no-cache make
    - echo "PUSH EXECUTION STARTED"
    # - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHORT_SHA
    - make push REGISTRY=$REGISTRY REPOSITORY=$REPO VERSION=$VERS TARGETOS=$TARGETOS TARGETARCH=$TARGETARCH
